# photowise configure
photowise.version = 0.0.1
photowise.title = Photowise
photowise.storage = ./data
photowise.covers = ${photowise.storage}/covers
photowise.thumbnails = ${photowise.storage}/thumbnails
photowise.trash = ${photowise.storage}/trash
photowise.page-size = 30
photowise.thumb-size = 480

# External library dependencies
app.lib.opencv = ./opencv/libopencv_java4100.so

# Graceful shutdown
server.port = 9000
server.shutdown = graceful
server.servlet.session.tracking-modes = cookie
server.servlet.session.timeout = 1800s
spring.lifecycle.timeout-per-shutdown-phase = 30s

# Enable gzip compression for js/css/jpg
server.compression.enabled = true
server.compression.mime-types = text/javascript,application/javascript,text/css,image/jpeg
server.tomcat.relaxed-path-chars = <,>,[,\,],{,|,}
server.tomcat.relaxed-query-chars = <,>,[,\,],{,|,}

# Data source for SQLite
spring.datasource.url = jdbc:sqlite:${photowise.storage}/photowise.db
spring.datasource.driver-class-name = org.sqlite.JDBC
spring.jpa.database-platform = org.hibernate.community.dialect.SQLiteDialect
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true

# Logger options
logging.level.root = info
logging.file.name = logs/photowise.log
logging.pattern.console = %d{HH:mm:ss} %-5level %logger{50} : %msg%n
logging.pattern.file = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger : %msg%n
